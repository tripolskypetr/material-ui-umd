
/// <reference path="./FieldType.ts"/>

namespace form {

  /**
   * Объект поля для прикладного программиста
   */
  export interface IField {

    /**
     * Общие поля. Поле name позволяет задать забор
     * поля из целевого объекта.
     *  - Поле id пробрасывается в аттрибуты корневого
     * блока компонента на странице и не используется в
     * компоненте List.
     * - Поле key пробрасывается в непосредственно в входные
     * параметры строки внутри List, недоступной прикладному
     * программисту. Не используется в One.
     */
    id?: string;
    key?: string;
    name: string;
    type: FieldType;

    /**
     * Наименование класса для поля (опционально)
     */
    className?: string;

    /**
     * Заголовок и описание, если возможен вывод у поля
     */
    title?: string;
    description?: string;

    /**
     * Колонки для One. Не используются в List (кроме фильтров).
     * Если указано поле columns, то остальные приравниваются к
     * его значению
     */
    columns?: '';
    phoneColumns?: '';
    tabletColumns?: '';
    desktopColumns?: '';

    /**
     * Дочерние поля для групп
     */
    fields?: IField[];

    /**
     * Коллбек, позволяющий организовать валидацию. Если
     * возвращаемое значение не равно null, считается за
     * ошибку
     */
    isValid?: (v) => null | string;

    /**
     * Коллбек, позволяющий скрыть поле, исходя из целевого
     * объекта
     */
    isVisible?: (v) => boolean;

    /**
     * Коллбек, позволяющий отключить поле, исходя из целевого
     * объекта
     */
    isDisabled?: (v) => boolean;

    /**
     * Специфичное для выпадающего меню поле, позволяющее выбрать
     * возможные значения с сопоставленными наименованиями
     */
    items?: {id: number, name: string}[];

  }

} // namespace form
